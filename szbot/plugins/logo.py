from szbot import sz
from requests import get
from pyrogram import filters
from pyrogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from szbot.helpers.fsub import ForceSub
import requests


@sz.on_message(filters.command("logo"))
@ForceSub
async def olol(_, message: Message):
    m = await sz.send_message(message.chat.id, "`⚙️ creating Your logo..`")
    text = message.text.split(None, 1)[1]
    lol = get((f"https://single-developers.up.railway.app/logo?name={text}").replace(' ','%20')).history[1].url
    caption = f"""
logo Genarated Successfully✅
࿂ **Generated By** : [szrosebot](https://t.me/szrosebot)
࿂ **Requestor** :. {message.from_user.mention}
࿂ **Powered By **  : [szteambots](https://t.me/szteambots)
࿂ **Download link** : `{lol}`
"""       
    await m.delete()
    await sz.send_photo(message.chat.id, photo=lol, caption =caption.format(message.from_user.mention),
                 reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "••Telegraph Link••", url=f"{lol}"
                    )
                ]
            ]
          ),
    )
#hq logo creator
@sz.on_message(filters.command("logohq"))
@ForceSub
async def lol(_, message: Message):
    m = await sz.send_message(message.chat.id, "`⚙️ creating Your logo..`")
    text = message.text.split(None, 1)[1]
    photo = get((f"https://api.single-developers.software/logohq?name={text}").replace(' ','%20')).history[1].url
    caption = f"""
HQlogo Genarated Successfully✅
࿂ **Generated By** : [szrosebot](https://t.me/szrosebot)
࿂ **Requestor** :. {message.from_user.mention}
࿂ **Powered By **  : [szteambots](https://t.me/szteambots)
࿂ **Download link** : `{photo}`
"""    
    await m.delete()
    await sz.send_photo(message.chat.id, photo=photo, caption =caption.format(message.from_user.mention),
                 reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "••Telegraph Link••", url=f"{photo}"
                    )
                ]
            ]
          ),
    )

@sz.on_message(filters.command("write"))
@ForceSub
async def ldol(_, message: Message):
  if not message.reply_to_message:  
    text = message.text.split(None, 1)[1]
    m = await sz.send_message(message.chat.id, "`⚙️ creating Your hand write..`")
    API = "https://single-developers.up.railway.app/write"
    body = {     
     "text":f"{text}"     
    }
    req = requests.post(API, headers={'Content-Type': 'application/json'}, json=body)
    photo = req.history[1].url
    caption = f"""
Hand Write Successfully✅

࿂ **Generated By** : [szrosebot](https://t.me/szrosebot)
࿂ **Requestor** :. {message.from_user.mention}
࿂ **Powered By **  : [szteambots](https://t.me/szteambots)
࿂ **Download link** : `{photo}`
"""    
    await m.delete()
    await sz.send_photo(message.chat.id, photo=photo, caption =caption.format(message.from_user.mention),
                 reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "••Telegraph Link••", url=f"{photo}"
                    )
                ]
            ]
          ),
    )
    lol = message.reply_to_message.text
    m = await sz.send_message(message.chat.id, "`⚙️ creating Your hand write..`")
    API = "https://single-developers.up.railway.app/write"
    body = {     
     "text":f"{lol}"     
    }
    req = requests.post(API, headers={'Content-Type': 'application/json'}, json=body)
    photo = req.history[1].url
    caption = f"""
Hand Write  Successfully✅

࿂ **Generated By** : [szrosebot](https://t.me/szrosebot)
࿂ **Requestor** :. {message.from_user.mention}
࿂ **Powered By **  : [szteambots](https://t.me/szteambots)
࿂ **Download link** : `{photo}`
"""    
    await m.delete()
    await sz.send_photo(message.chat.id, photo=photo, caption =caption.format(message.from_user.mention),
                 reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "••Telegraph Link••", url=f"{photo}"
                    )
                ]
            ]
          ),
    )
